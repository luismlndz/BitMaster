{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { easy, medium } from \"../maps/maps\";\nexport const useCharacter = map => {\n  _s();\n\n  let mapSpots = easy;\n  if (map === 'easy') mapSpots = easy;else if (map === 'medium') mapSpots === medium;\n  const [position, setPosition] = useState({\n    x: mapSpots.length / 2,\n    y: mapSpots.length / 2\n  });\n  const [side, setSide] = useState('down');\n  const [trigger, setTrigger] = useState(false);\n\n  const moveLeft = () => {\n    setPosition(position => ({\n      x: canMove(position.x - 1, position.y) ? position.x - 1 : position.x,\n      y: position.y\n    }));\n    setSide('left');\n  };\n\n  const moveRight = () => {\n    setPosition(position => ({\n      x: canMove(position.x + 1, position.y) ? position.x + 1 : position.x,\n      y: position.y\n    }));\n    setSide('right');\n  };\n\n  const moveUp = () => {\n    setPosition(position => ({\n      x: position.x,\n      y: canMove(position.x, position.y - 1) ? position.y - 1 : position.y\n    }));\n    setSide('up');\n  };\n\n  const moveDown = () => {\n    setPosition(position => ({\n      x: position.x,\n      y: canMove(position.x, position.y + 1) ? position.y + 1 : position.y\n    }));\n    setSide('down');\n  };\n\n  const canMove = (x, y) => {\n    if (mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n      if (mapSpots[y][x] === 1) {\n        setTrigger(false);\n        return true;\n      } else if (mapSpots[y][x] === 2) {\n        setTrigger(true);\n        return false;\n      }\n    }\n\n    setTrigger(false);\n    return false;\n  };\n\n  return {\n    trigger,\n    x: position.x,\n    y: position.y,\n    side,\n    moveLeft,\n    moveRight,\n    moveUp,\n    moveDown\n  };\n};\n\n_s(useCharacter, \"hLoPeTDq/SuS81ZmoB4bljRN2mo=\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/hooks/useCharacter.ts"],"names":["useState","easy","medium","useCharacter","map","mapSpots","position","setPosition","x","length","y","side","setSide","trigger","setTrigger","moveLeft","canMove","moveRight","moveUp","moveDown","undefined"],"mappings":"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","sourcesContent":["import { CharacterSides } from \"../components/Character/CharacterSides\";\nimport { useState } from \"react\"\nimport { easy, medium } from \"../maps/maps\";\n\nexport const useCharacter = (map: string) => {\n    let mapSpots = easy;\n    if(map === 'easy')\n        mapSpots = easy;\n    else if(map === 'medium')\n        mapSpots === medium;\n\n\n    const [position, setPosition] = useState({x: mapSpots.length/2, y: mapSpots.length/2});\n    const [side, setSide] = useState<CharacterSides>('down');\n    const [trigger, setTrigger] = useState<boolean>(false);\n\n    const moveLeft = () => {\n        setPosition((position) => ({\n            x: canMove(position.x - 1, position.y) ? position.x - 1 : position.x,\n            y: position.y\n        }));\n        setSide('left');\n    }\n\n    const moveRight = () => {\n        setPosition((position) => ({\n            x: canMove(position.x + 1, position.y) ? position.x + 1 : position.x,\n            y: position.y\n        }));\n        setSide('right');\n    }\n\n    const moveUp = () => {\n        setPosition((position) => ({\n            x: position.x,\n            y: canMove(position.x, position.y - 1) ? position.y - 1 : position.y\n        }));\n        setSide('up')\n    }\n\n    const moveDown = () => {\n        setPosition((position) => ({\n            x: position.x,\n            y: canMove(position.x, position.y + 1) ? position.y + 1 : position.y\n        }));\n        setSide('down')\n    }\n\n    const canMove = (x: number, y: number) => {\n        if(mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n            if(mapSpots[y][x] === 1) {\n                setTrigger(false);\n                return true;\n            }\n            else if(mapSpots[y][x] === 2) {\n                setTrigger(true);\n                return false;\n            }\n        }\n        setTrigger(false);\n        return false;\n    }\n\n    return {\n        trigger,\n        x: position.x,\n        y: position.y,\n        side,\n        moveLeft,\n        moveRight,\n        moveUp,\n        moveDown\n    }\n\n}"]},"metadata":{},"sourceType":"module"}