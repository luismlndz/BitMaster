{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/pages/Game/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './GameStyling';\nimport { useEffect, useState } from 'react';\nimport { Question } from '../../components/Question/Question';\nimport { HowToPlay } from '../../components/HowToPlay/HowToPlay';\nimport { useCharacter } from '../../hooks/useCharacter';\nimport { Leaderboard } from '../../components/Leaderboard/Leaderboard';\nimport { UploadScore } from '../../components/UploadScore/UploadScore';\nimport { Map } from '../../components/Map/Map';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const [start, setStart] = useState(false);\n  const [over, setOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [uploadScore, setUploadScore] = useState(false);\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [language, setLanguage] = useState('JavaScript');\n  const [leaderboard, setLeaderboard] = useState();\n  const character = useCharacter();\n  const {\n    PORT,\n    BACKEND_URL\n  } = process.env;\n  const languageOptions = [{\n    value: 'JavaScript',\n    label: 'JavaScript'\n  }, {\n    value: 'Java',\n    label: 'Java'\n  }, {\n    value: 'Python',\n    label: 'Python'\n  }, {\n    value: 'C',\n    label: 'C'\n  }];\n\n  const selectLanguage = selected => {\n    setLanguage(selected.value);\n  };\n\n  useEffect(() => {\n    if (start) {\n      console.log(PORT);\n      console.log(BACKEND_URL);\n\n      if (score >= 300 && score < 600) {\n        setDifficulty('Medium');\n      }\n\n      if (score >= 600) {\n        setDifficulty('Hard');\n      }\n    }\n\n    axios.get(`${BACKEND_URL}:${PORT}/leaderboard`).then(response => {\n      setLeaderboard(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [score, start]);\n\n  const addScore = arg => {\n    if (arg) setScore(score + 100);else {\n      setTimeout(() => {\n        setStart(false);\n        setOver(true);\n      }, 3000);\n    }\n  };\n\n  const updateLeaderboard = () => {\n    axios.get('http://localhost:8080/leaderboard').then(response => {\n      setLeaderboard(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: [/*#__PURE__*/_jsxDEV(C.mapContainer, {\n      children: start ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          difficulty: difficulty,\n          character: character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.textContainer, {\n          children: [/*#__PURE__*/_jsxDEV(C.score, {\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: languageOptions,\n            onChange: selectLanguage,\n            placeholder: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(C.difficulty, {\n            children: [\"Difficulty: \", difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: over ? /*#__PURE__*/_jsxDEV(C.gameOver, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `Score: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(C.button, {\n            onClick: () => {\n              window.location.reload();\n            },\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(C.button, {\n            onClick: () => {\n              setOver(false);\n              setUploadScore(true);\n            },\n            children: \"Upload Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: uploadScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: score > 0 ? /*#__PURE__*/_jsxDEV(UploadScore, {\n              score: score,\n              updateLeaderboard: updateLeaderboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(C.gameOver, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Score more than 0 to upload your score!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(C.button, {\n                onClick: () => {\n                  window.location.reload();\n                },\n                children: \"Play Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 41\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(C.startMenu, {\n            children: /*#__PURE__*/_jsxDEV(C.startButton, {\n              onClick: () => {\n                setStart(true);\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }, this)\n        }, void 0, false)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), start ? /*#__PURE__*/_jsxDEV(Question, {\n      addScore: addScore,\n      difficulty: difficulty,\n      language: language,\n      trigger: character.trigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: over || uploadScore ? /*#__PURE__*/_jsxDEV(Leaderboard, {\n        leaderboard: leaderboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"y/OxGz+nYmVJ2mgiX3Lf/ZsMAa4=\", false, function () {\n  return [useCharacter];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/pages/Game/Game.tsx"],"names":["C","useEffect","useState","Question","HowToPlay","useCharacter","Leaderboard","UploadScore","Map","Select","axios","Game","start","setStart","over","setOver","score","setScore","uploadScore","setUploadScore","difficulty","setDifficulty","language","setLanguage","leaderboard","setLeaderboard","character","PORT","BACKEND_URL","process","env","languageOptions","value","label","selectLanguage","selected","console","log","get","then","response","data","catch","err","addScore","arg","setTimeout","updateLeaderboard","window","location","reload","trigger"],"mappings":";;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,eAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAoC,cAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAS,CAAT,CAAlC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAS,MAAT,CAA5C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAS,YAAT,CAAxC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,EAA9C;AACA,QAAMwB,SAAS,GAAGrB,YAAY,EAA9B;AACA,QAAM;AAAEsB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBC,OAAO,CAACC,GAAtC;AAEA,QAAMC,eAAe,GAAG,CACpB;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GADoB,EAEpB;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFoB,EAGpB;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHoB,EAIpB;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAJoB,CAAxB;;AAOA,QAAMC,cAAc,GAAIC,QAAD,IAA8D;AACjFZ,IAAAA,WAAW,CAACY,QAAQ,CAAEH,KAAX,CAAX;AACH,GAFD;;AAIA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,KAAH,EAAU;AACNwB,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;;AACA,UAAGZ,KAAK,IAAI,GAAT,IAAgBA,KAAK,GAAG,GAA3B,EAAgC;AAC5BK,QAAAA,aAAa,CAAC,QAAD,CAAb;AACH;;AAED,UAAGL,KAAK,IAAI,GAAZ,EAAiB;AACbK,QAAAA,aAAa,CAAC,MAAD,CAAb;AACH;AACJ;;AAEDX,IAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAEV,WAAY,IAAGD,IAAK,cAAjC,EACCY,IADD,CACOC,QAAD,IAAc;AAChBf,MAAAA,cAAc,CAACe,QAAQ,CAACC,IAAV,CAAd;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KAND;AAQH,GArBQ,EAqBN,CAAC3B,KAAD,EAAQJ,KAAR,CArBM,CAAT;;AAuBA,QAAMgC,QAAQ,GAAIC,GAAD,IAAwB;AACrC,QAAGA,GAAH,EACI5B,QAAQ,CAACD,KAAK,GAAG,GAAT,CAAR,CADJ,KAEK;AACD8B,MAAAA,UAAU,CAAC,MAAM;AACbjC,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAHS,EAGP,IAHO,CAAV;AAIH;AACJ,GATD;;AAWA,QAAMgC,iBAAiB,GAAG,MAAM;AAC5BrC,IAAAA,KAAK,CAAC4B,GAAN,CAAU,mCAAV,EACCC,IADD,CACOC,QAAD,IAAc;AAChBf,MAAAA,cAAc,CAACe,QAAQ,CAACC,IAAV,CAAd;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KAND;AAOH,GARD;;AAUA,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,4BACI,QAAC,CAAD,CAAG,YAAH;AAAA,gBACK/B,KAAK,gBACF;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,UAAU,EAAEQ,UAAjB;AAA6B,UAAA,SAAS,EAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,CAAD,CAAG,aAAH;AAAA,kCACI,QAAC,CAAD,CAAG,KAAH;AAAA,kCAAiBV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AACI,YAAA,OAAO,EAAEe,eADb;AAEI,YAAA,QAAQ,EAAEG,cAFd;AAGI,YAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI,QAAC,CAAD,CAAG,UAAH;AAAA,uCAA2Bd,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADE,gBAcF;AAAA,kBACKN,IAAI,gBACD,QAAC,CAAD,CAAG,QAAH;AAAA,kCACI;AAAA,sBAAM,UAASE,KAAM;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,CAAD,CAAG,MAAH;AAAU,YAAA,OAAO,EAAE,MAAM;AAACgC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAAyB,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,CAAD,CAAG,MAAH;AAAU,YAAA,OAAO,EAAE,MAAM;AAACnC,cAAAA,OAAO,CAAC,KAAD,CAAP;AAAgBI,cAAAA,cAAc,CAAC,IAAD,CAAd;AAAqB,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,gBAOD;AAAA,oBACKD,WAAW,gBACR;AAAA,sBACEF,KAAK,GAAG,CAAT,gBACG,QAAC,WAAD;AAAa,cAAA,KAAK,EAAEA,KAApB;AAA2B,cAAA,iBAAiB,EAAE+B;AAA9C;AAAA;AAAA;AAAA;AAAA,oBADH,gBAGG,QAAC,CAAD,CAAG,QAAH;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,CAAD,CAAG,MAAH;AAAU,gBAAA,OAAO,EAAE,MAAM;AAACC,kBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAAyB,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,2BADQ,gBAYR,QAAC,CAAD,CAAG,SAAH;AAAA,mCACI,QAAC,CAAD,CAAG,WAAH;AAAe,cAAA,OAAO,EAAE,MAAM;AAACrC,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AAAe,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAbR;AARR;AAfR;AAAA;AAAA;AAAA;AAAA,YADJ,EA8CKD,KAAK,gBACF,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEgC,QAApB;AAA8B,MAAA,UAAU,EAAExB,UAA1C;AAAsD,MAAA,QAAQ,EAAEE,QAAhE;AAA0E,MAAA,OAAO,EAAEI,SAAS,CAACyB;AAA7F;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF;AAAA,gBACMrC,IAAI,IAAII,WAAT,gBACG,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEM;AAA1B;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAJR,qBAjDR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH;;GA9HuBb,I;UAQFN,Y;;;KAREM,I","sourcesContent":["import * as C from './GameStyling';\nimport { useEffect, useState } from 'react';\nimport { Question } from '../../components/Question/Question';\nimport { HowToPlay } from '../../components/HowToPlay/HowToPlay';\nimport { useCharacter } from '../../hooks/useCharacter';\nimport { Leaderboard } from '../../components/Leaderboard/Leaderboard';\nimport { UploadScore } from '../../components/UploadScore/UploadScore';\nimport { Map } from '../../components/Map/Map';\nimport Select, { SingleValue } from 'react-select';\nimport axios from 'axios';\n\nexport default function Game() {\n    const [start, setStart] = useState<boolean>(false);\n    const [over, setOver] = useState<boolean>(false);\n    const [score, setScore] = useState<number>(0);\n    const [uploadScore, setUploadScore] = useState<boolean>(false);\n    const [difficulty, setDifficulty] = useState<string>('Easy');\n    const [language, setLanguage] = useState<string>('JavaScript');\n    const [leaderboard, setLeaderboard] = useState<[{username: string, score: number}]>();\n    const character = useCharacter();\n    const { PORT, BACKEND_URL } = process.env;\n\n    const languageOptions = [\n        { value: 'JavaScript', label: 'JavaScript' },\n        { value: 'Java', label: 'Java' },\n        { value: 'Python', label: 'Python' },\n        { value: 'C', label: 'C' }\n    ]\n\n    const selectLanguage = (selected: SingleValue<{ value: string , label: string }>) => {\n        setLanguage(selected!.value);\n    }\n\n    useEffect(() => {\n        if(start) {\n            console.log(PORT);\n            console.log(BACKEND_URL);\n            if(score >= 300 && score < 600) { \n                setDifficulty('Medium');\n            }\n\n            if(score >= 600) {\n                setDifficulty('Hard');\n            }\n        }\n        \n        axios.get(`${BACKEND_URL}:${PORT}/leaderboard`)\n        .then((response) => {\n            setLeaderboard(response.data);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n\n    }, [score, start]);\n\n    const addScore = (arg: Boolean): void => {\n        if(arg)\n            setScore(score + 100);\n        else {\n            setTimeout(() => {\n                setStart(false);\n                setOver(true);\n            }, 3000);\n        }      \n    }\n\n    const updateLeaderboard = () => {\n        axios.get('http://localhost:8080/leaderboard')\n        .then((response) => {\n            setLeaderboard(response.data);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    return (\n        <C.container>\n            <C.mapContainer>\n                {start ?\n                    <> \n                        <Map difficulty={difficulty} character={character}/>\n                        <C.textContainer>\n                            <C.score>Score: {score}</C.score>\n                            <Select \n                                options={languageOptions} \n                                onChange={selectLanguage}\n                                placeholder='JavaScript'\n                            />\n                            <C.difficulty>Difficulty: {difficulty}</C.difficulty>\n                        </C.textContainer>\n                    </>\n                    :\n                    <>\n                        {over ? \n                            <C.gameOver>\n                                <h1>{`Score: ${score}`}</h1>\n                                <C.button onClick={() => {window.location.reload()}}>Play Again</C.button>\n                                <C.button onClick={() => {setOver(false); setUploadScore(true)}}>Upload Score</C.button>\n                            </C.gameOver>\n                            :\n                            <>\n                                {uploadScore ? \n                                    <>\n                                    {(score > 0) ?\n                                        <UploadScore score={score} updateLeaderboard={updateLeaderboard}/>\n                                        :\n                                        <C.gameOver>\n                                            <h1>Score more than 0 to upload your score!</h1>\n                                            <C.button onClick={() => {window.location.reload()}}>Play Again</C.button>\n                                        </C.gameOver>\n                                    }\n                                    </>\n                                    :\n                                    <C.startMenu>\n                                        <C.startButton onClick={() => {setStart(true)}}>Start</C.startButton>\n                                    </C.startMenu>\n                                }\n                            </>\n                        } \n                    </> \n                }\n            </C.mapContainer>\n            {start ?\n                <Question addScore={addScore} difficulty={difficulty} language={language} trigger={character.trigger}/>\n                :\n                <>\n                    {(over || uploadScore) ?\n                        <Leaderboard leaderboard={leaderboard!}/>\n                        :             \n                        <HowToPlay/>\n                    }\n                </>\n            }\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}