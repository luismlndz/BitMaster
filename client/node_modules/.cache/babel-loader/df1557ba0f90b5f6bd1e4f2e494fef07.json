{"ast":null,"code":"'use strict';\n\nmodule.exports = toml;\ntoml.displayName = 'toml';\ntoml.aliases = [];\n\nfunction toml(Prism) {\n  ;\n\n  (function (Prism) {\n    // pattern: /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\.|[^\\\\\"\\r\\n])*\")/\n    var key = '(?:[\\\\w-]+|\\'[^\\'\\n\\r]*\\'|\"(?:\\\\.|[^\\\\\\\\\"\\r\\n])*\")';\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp('(^\\\\s*\\\\[\\\\s*(?:\\\\[\\\\s*)?)' + key + '(?:\\\\s*\\\\.\\\\s*' + key + ')*(?=\\\\s*\\\\])', 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp('(^\\\\s*|[{,]\\\\s*)' + key + '(?:\\\\s*\\\\.\\\\s*' + key + ')*(?=\\\\s*=)', 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [{\n        // Offset Date-Time, Local Date-Time, Local Date\n        pattern: /\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,\n        alias: 'number'\n      }, {\n        // Local Time\n        pattern: /\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,\n        alias: 'number'\n      }],\n      number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    };\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/node_modules/refractor/lang/toml.js"],"names":["module","exports","toml","displayName","aliases","Prism","key","languages","comment","pattern","greedy","table","RegExp","lookbehind","alias","string","date","number","boolean","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnB;;AAAC,GAAC,UAASA,KAAT,EAAgB;AAChB;AACA,QAAIC,GAAG,GAAG,oDAAV;AACAD,IAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,GAAuB;AACrBM,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,KADF;AAEPC,QAAAA,MAAM,EAAE;AAFD,OADY;AAKrBC,MAAAA,KAAK,EAAE;AACLF,QAAAA,OAAO,EAAEG,MAAM,CACb,+BACEN,GADF,GAEE,gBAFF,GAGEA,GAHF,GAIE,eALW,EAMb,GANa,CADV;AASLO,QAAAA,UAAU,EAAE,IATP;AAULH,QAAAA,MAAM,EAAE,IAVH;AAWLI,QAAAA,KAAK,EAAE;AAXF,OALc;AAkBrBR,MAAAA,GAAG,EAAE;AACHG,QAAAA,OAAO,EAAEG,MAAM,CACb,qBAAqBN,GAArB,GAA2B,gBAA3B,GAA8CA,GAA9C,GAAoD,aADvC,EAEb,GAFa,CADZ;AAKHO,QAAAA,UAAU,EAAE,IALT;AAMHH,QAAAA,MAAM,EAAE,IANL;AAOHI,QAAAA,KAAK,EAAE;AAPJ,OAlBgB;AA2BrBC,MAAAA,MAAM,EAAE;AACNN,QAAAA,OAAO,EAAE,6EADH;AAENC,QAAAA,MAAM,EAAE;AAFF,OA3Ba;AA+BrBM,MAAAA,IAAI,EAAE,CACJ;AACE;AACAP,QAAAA,OAAO,EAAE,+EAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OADI,EAMJ;AACE;AACAL,QAAAA,OAAO,EAAE,8BAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OANI,CA/Be;AA2CrBG,MAAAA,MAAM,EAAE,sKA3Ca;AA4CrBC,MAAAA,OAAO,EAAE,oBA5CY;AA6CrBC,MAAAA,WAAW,EAAE;AA7CQ,KAAvB;AA+CD,GAlDA,EAkDEd,KAlDF;AAmDF","sourcesContent":["'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function(Prism) {\n    // pattern: /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\.|[^\\\\\"\\r\\n])*\")/\n    var key = '(?:[\\\\w-]+|\\'[^\\'\\n\\r]*\\'|\"(?:\\\\.|[^\\\\\\\\\"\\r\\n])*\")'\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          '(^\\\\s*\\\\[\\\\s*(?:\\\\[\\\\s*)?)' +\n            key +\n            '(?:\\\\s*\\\\.\\\\s*' +\n            key +\n            ')*(?=\\\\s*\\\\])',\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          '(^\\\\s*|[{,]\\\\s*)' + key + '(?:\\\\s*\\\\.\\\\s*' + key + ')*(?=\\\\s*=)',\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern: /\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,\n          alias: 'number'\n        }\n      ],\n      number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}