{"ast":null,"code":"'use strict';\n\nvar refractorJavadoclike = require('./javadoclike.js');\n\nmodule.exports = jsdoc;\njsdoc.displayName = 'jsdoc';\njsdoc.aliases = [];\n\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike);\n\n  (function (Prism) {\n    var javascript = Prism.languages.javascript;\n    var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n    var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    });\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [{\n        pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n        lookbehind: true,\n        inside: {\n          punctuation: /[.,:?=<>|{}()[\\]]/\n        }\n      }, {\n        pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }],\n      example: {\n        pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    });\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/node_modules/refractor/lang/jsdoc.js"],"names":["refractorJavadoclike","require","module","exports","jsdoc","displayName","aliases","Prism","register","javascript","languages","type","source","parameterPrefix","extend","parameter","pattern","RegExp","lookbehind","inside","punctuation","insertBefore","code","alias","example","javadoclike","addSupport"],"mappings":"AAAA;;AACA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAlC;;AACAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,oBAAf;;AACC,GAAC,UAASO,KAAT,EAAgB;AAChB,QAAIE,UAAU,GAAGF,KAAK,CAACG,SAAN,CAAgBD,UAAjC;AACA,QAAIE,IAAI,GAAG,qCAAqCC,MAAhD;AACA,QAAIC,eAAe,GACjB,6CAA6CF,IAA7C,GAAoD,SADtD;AAEAJ,IAAAA,KAAK,CAACG,SAAN,CAAgBN,KAAhB,GAAwBG,KAAK,CAACG,SAAN,CAAgBI,MAAhB,CAAuB,aAAvB,EAAsC;AAC5DC,MAAAA,SAAS,EAAE;AACT;AACAC,QAAAA,OAAO,EAAEC,MAAM,CAACJ,eAAe,GAAG,6BAA6BD,MAAhD,CAFN;AAGTM,QAAAA,UAAU,EAAE,IAHH;AAITC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AAJC;AADiD,KAAtC,CAAxB;AAUAb,IAAAA,KAAK,CAACG,SAAN,CAAgBW,YAAhB,CAA6B,OAA7B,EAAsC,SAAtC,EAAiD;AAC/C,4BAAsB;AACpB;AACAL,QAAAA,OAAO,EAAEC,MAAM,CACbJ,eAAe,GAAG,8CAA8CD,MADnD,CAFK;AAKpBM,QAAAA,UAAU,EAAE,IALQ;AAMpBC,QAAAA,MAAM,EAAE;AACNJ,UAAAA,SAAS,EAAE;AACTC,YAAAA,OAAO,EAAE,0BADA;AAETE,YAAAA,UAAU,EAAE,IAFH;AAGTC,YAAAA,MAAM,EAAE;AACNC,cAAAA,WAAW,EAAE;AADP;AAHC,WADL;AAQNE,UAAAA,IAAI,EAAE;AACJN,YAAAA,OAAO,EAAE,mBADL;AAEJE,YAAAA,UAAU,EAAE,IAFR;AAGJC,YAAAA,MAAM,EAAEV,UAHJ;AAIJc,YAAAA,KAAK,EAAE;AAJH,WARA;AAcNH,UAAAA,WAAW,EAAE;AAdP;AANY,OADyB;AAwB/C,oBAAc,CACZ;AACEJ,QAAAA,OAAO,EAAEC,MAAM,CAAC,kBAAkBN,IAAnB,CADjB;AAEEO,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AAHV,OADY,EAQZ;AACEJ,QAAAA,OAAO,EAAE,mFADX;AAEEE,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AAHV,OARY,CAxBiC;AAwC/CI,MAAAA,OAAO,EAAE;AACPR,QAAAA,OAAO,EAAE,kDADF;AAEPE,QAAAA,UAAU,EAAE,IAFL;AAGPC,QAAAA,MAAM,EAAE;AACNG,UAAAA,IAAI,EAAE;AACJN,YAAAA,OAAO,EAAE,sBADL;AAEJE,YAAAA,UAAU,EAAE,IAFR;AAGJC,YAAAA,MAAM,EAAEV,UAHJ;AAIJc,YAAAA,KAAK,EAAE;AAJH;AADA;AAHD;AAxCsC,KAAjD;AAqDAhB,IAAAA,KAAK,CAACG,SAAN,CAAgBe,WAAhB,CAA4BC,UAA5B,CAAuC,YAAvC,EAAqDnB,KAAK,CAACG,SAAN,CAAgBN,KAArE;AACD,GArEA,EAqEEG,KArEF;AAsEF","sourcesContent":["'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  ;(function(Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source\n    var parameterPrefix =\n      '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            punctuation: /[.,:?=<>|{}()[\\]]/\n          }\n        },\n        {\n          pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      ],\n      example: {\n        pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}