{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './QuestionStyling';\nimport data from '../../data/questions.json';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Question = () => {\n  _s();\n\n  const [question, setQuestion] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setQuestion(data[0]);\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(C.question, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.block, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.block\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.optionsContainer, {\n        children: question.options.map(option => /*#__PURE__*/_jsxDEV(C.option, {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"7E9gAMSuLeW+2e/FoMtx0eEIpPQ=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx"],"names":["C","data","useEffect","useState","Question","question","setQuestion","loading","setLoading","block","options","map","option"],"mappings":";;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW,CAACL,IAAI,CAAC,CAAD,CAAL,CAAX;AACAO,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,cACKD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACJ;AAAA,8BACI,QAAC,CAAD,CAAG,QAAH;AAAA,+BACI;AAAA,oBAAKF,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,CAAD,CAAG,KAAH;AAAA,+BACI;AAAA,oBAAIA,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,CAAD,CAAG,gBAAH;AAAA,kBACKJ,QAAQ,CAACK,OAAT,CAAiBC,GAAjB,CAAsBC,MAAD,iBAClB,QAAC,CAAD,CAAG,MAAH;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA5BM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import * as C from './QuestionStyling';\nimport data from '../../data/questions.json';\nimport { useEffect, useState } from 'react';\n\nexport const Question = () => {\n    const [question, setQuestion] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setQuestion(data[0]);\n        setLoading(false);\n    }, []);\n\n    return (\n        <C.container>\n            {loading ? <h1>Loading...</h1> : \n                <>\n                    <C.question>\n                        <h1>{question.question}</h1>\n                    </C.question>\n                    <C.block>\n                        <p>{question.block}</p>\n                    </C.block>\n                    <C.optionsContainer>\n                        {question.options.map((option) => (\n                            <C.option>{option}</C.option>\n                        ))}\n                    </C.optionsContainer>\n                </>\n            }\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}