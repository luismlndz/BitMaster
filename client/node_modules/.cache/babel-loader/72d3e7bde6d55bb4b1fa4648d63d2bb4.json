{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './QuestionStyling';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Question = _ref => {\n  _s();\n\n  let {\n    addScore,\n    difficulty\n  } = _ref;\n  const [question, setQuestion] = useState(null);\n  const [isCorrect, setIsCorrect] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`http://localhost:8080/questions/${difficulty}`).then(response => {\n      setQuestion(response.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const checkAnswer = option => {\n    if (option === (question === null || question === void 0 ? void 0 : question.answer)) {\n      setIsCorrect(true);\n      addScore(true);\n    } else setIsCorrect(false);\n\n    disableButtons();\n  };\n\n  const handleContinue = () => {\n    axios.get(`http://localhost:8080/questions/${difficulty}`).then(response => {\n      setQuestion(response.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const disableButtons = () => {\n    const buttons = document.querySelectorAll('button');\n    buttons.forEach(option => {\n      option.setAttribute('disabled', 'true');\n      option.style.cursor = 'auto';\n      option.style.backgroundColor = 'white';\n      option.style.color = 'black';\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: loading ? /*#__PURE__*/_jsxDEV(C.loading, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(C.question, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.block, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.block\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.optionsContainer, {\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(C.option, {\n          onClick: () => {\n            checkAnswer(option);\n          },\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), isCorrect ? /*#__PURE__*/_jsxDEV(C.nextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(C.correct, {\n          children: \"Correct!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(C.continueButton, {\n          onClick: handleContinue,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this) : isCorrect === false ? /*#__PURE__*/_jsxDEV(C.nextContainer, {\n        children: /*#__PURE__*/_jsxDEV(C.incorrect, {\n          children: \"Incorrect!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this) : '']\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"XJlkq1MCaHpbjyrREjup7Ln/qC8=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx"],"names":["C","useEffect","useState","axios","Question","addScore","difficulty","question","setQuestion","isCorrect","setIsCorrect","loading","setLoading","get","then","response","data","catch","err","console","log","checkAnswer","option","answer","disableButtons","handleContinue","buttons","document","querySelectorAll","forEach","setAttribute","style","cursor","backgroundColor","color","block","options","map","index"],"mappings":"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","sourcesContent":["import * as C from './QuestionStyling';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\ninterface props {\n    addScore(arg: Boolean): void;\n    difficulty: string;\n}\n\nexport const Question = ({addScore, difficulty}: props) => {\n    const [question, setQuestion] = useState<null | {id: number, question: string, block: string,options: Array<string>, answer: string}>(null);\n    const [isCorrect, setIsCorrect] = useState<Boolean>();\n    const [loading, setLoading] = useState<Boolean>(true);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8080/questions/${difficulty}`)\n        .then((response) => {\n            setQuestion(response.data);\n            setLoading(false);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    const checkAnswer = (option: string) => {\n        if(option === question?.answer) {\n            setIsCorrect(true);\n            addScore(true);\n        }\n        else\n            setIsCorrect(false);\n        \n        disableButtons();\n    }\n\n    const handleContinue = () => {\n        axios.get(`http://localhost:8080/questions/${difficulty}`)\n        .then((response) => {\n            setQuestion(response.data);\n            setLoading(false);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    const disableButtons = () => {\n        const buttons = document.querySelectorAll('button');\n        buttons.forEach((option) => {\n            option.setAttribute('disabled', 'true');\n            option.style.cursor = 'auto';\n            option.style.backgroundColor = 'white';\n            option.style.color = 'black';\n        })\n    }\n\n    return (\n        <C.container>\n            {loading ? <C.loading>Loading...</C.loading> : \n                <>\n                    <C.question>\n                        <h1>{question!.question}</h1>\n                    </C.question>\n                    <C.block>\n                        <p>{question!.block}</p>\n                    </C.block>\n                    <C.optionsContainer>\n                        {question!.options.map((option, index) => (\n                            <C.option key={index} onClick={() => {checkAnswer(option)}} >{option}</C.option>\n                        ))}\n                    </C.optionsContainer>\n                    {isCorrect ? \n                        <C.nextContainer>\n                            <C.correct>Correct!</C.correct>\n                            <C.continueButton onClick={handleContinue} >Continue</C.continueButton>\n                        </C.nextContainer> \n                    : ((isCorrect === false) ? \n                        <C.nextContainer>\n                            <C.incorrect>Incorrect!</C.incorrect> \n                        </C.nextContainer>\n                        : '')\n                    }\n                </>\n            }\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}