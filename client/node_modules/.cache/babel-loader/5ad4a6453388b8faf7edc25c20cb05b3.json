{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/pages/Game/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './GameStyling';\nimport { useEffect, useState } from 'react';\nimport { Question } from '../../components/Question/Question';\nimport { HowToPlay } from '../../components/HowToPlay/HowToPlay';\nimport { useCharacter } from '../../hooks/useCharacter';\nimport { Leaderboard } from '../../components/Leaderboard/Leaderbaord';\nimport { UploadScore } from '../../components/UploadScore/UploadScore';\nimport { Map } from '../../components/Map/Map';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  const [start, setStart] = useState(false);\n  const [over, setOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [uploadScore, setUploadScore] = useState(false);\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [language, setLanguage] = useState('JavaScript');\n  const character = useCharacter();\n  const languageOptions = [{\n    value: 'JavaScript',\n    label: 'JavaScript'\n  }, {\n    value: 'Java',\n    label: 'Java'\n  }, {\n    value: 'Python',\n    label: 'Python'\n  }, {\n    value: 'C',\n    label: 'C'\n  }];\n\n  const selectLanguage = selected => {\n    setLanguage(selected.value);\n  };\n\n  useEffect(() => {\n    if (start) {\n      if (score >= 300 && score < 600) {\n        setDifficulty('Medium');\n      }\n\n      if (score >= 600) {\n        setDifficulty('Hard');\n      }\n    }\n  }, [score, start]);\n\n  const addScore = arg => {\n    if (arg) setScore(score + 100);else {\n      setTimeout(() => {\n        setStart(false);\n        setOver(true);\n      }, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: [/*#__PURE__*/_jsxDEV(C.mapContainer, {\n      children: start ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          difficulty: difficulty,\n          character: character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.textContainer, {\n          children: [/*#__PURE__*/_jsxDEV(C.score, {\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: languageOptions,\n            onChange: selectLanguage,\n            placeholder: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(C.difficulty, {\n            children: [\"Difficulty: \", difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: over ? /*#__PURE__*/_jsxDEV(C.gameOver, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `Score: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(C.button, {\n            onClick: () => {\n              window.location.reload();\n            },\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(C.button, {\n            onClick: () => {\n              setOver(false);\n              setUploadScore(true);\n            },\n            children: \"Upload Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: uploadScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: score > 0 ? /*#__PURE__*/_jsxDEV(UploadScore, {\n              score: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(C.gameOver, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Score more than 0 to upload your score!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(C.button, {\n                onClick: () => {\n                  window.location.reload();\n                },\n                children: \"Play Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 41\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(C.startMenu, {\n            children: /*#__PURE__*/_jsxDEV(C.startButton, {\n              onClick: () => {\n                setStart(true);\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this)\n        }, void 0, false)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), start ? /*#__PURE__*/_jsxDEV(Question, {\n      addScore: addScore,\n      difficulty: difficulty,\n      language: language,\n      trigger: character.trigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: over || uploadScore ? /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"WZLQtZ1DUHRgwBisG/HrMuztefo=\", false, function () {\n  return [useCharacter];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/pages/Game/Game.tsx"],"names":["C","useEffect","useState","Question","HowToPlay","useCharacter","Leaderboard","UploadScore","Map","Select","Game","start","setStart","over","setOver","score","setScore","uploadScore","setUploadScore","difficulty","setDifficulty","language","setLanguage","character","languageOptions","value","label","selectLanguage","selected","addScore","arg","setTimeout","window","location","reload","trigger"],"mappings":"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","sourcesContent":["import * as C from './GameStyling';\nimport { useEffect, useState } from 'react';\nimport { Question } from '../../components/Question/Question';\nimport { HowToPlay } from '../../components/HowToPlay/HowToPlay';\nimport { useCharacter } from '../../hooks/useCharacter';\nimport { Leaderboard } from '../../components/Leaderboard/Leaderbaord';\nimport { UploadScore } from '../../components/UploadScore/UploadScore';\nimport { Map } from '../../components/Map/Map';\nimport Select, { SingleValue } from 'react-select';\n\nexport default function Game() {\n    const [start, setStart] = useState<boolean>(false);\n    const [over, setOver] = useState<boolean>(false);\n    const [score, setScore] = useState<number>(0);\n    const [uploadScore, setUploadScore] = useState<boolean>(false);\n    const [difficulty, setDifficulty] = useState<string>('Easy');\n    const [language, setLanguage] = useState<string>('JavaScript');\n    const character = useCharacter();\n\n    const languageOptions = [\n        { value: 'JavaScript', label: 'JavaScript' },\n        { value: 'Java', label: 'Java' },\n        { value: 'Python', label: 'Python' },\n        { value: 'C', label: 'C' }\n    ]\n\n    const selectLanguage = (selected: SingleValue<{ value: string , label: string }>) => {\n        setLanguage(selected!.value);\n    }\n\n    useEffect(() => {\n        if(start) {\n            if(score >= 300 && score < 600) { \n                setDifficulty('Medium');\n            }\n\n            if(score >= 600) {\n                setDifficulty('Hard');\n            }\n        }\n    }, [score, start]);\n\n    const addScore = (arg: Boolean): void => {\n        if(arg)\n            setScore(score + 100);\n        else {\n            setTimeout(() => {\n                setStart(false);\n                setOver(true);\n            }, 3000);\n        }      \n    }\n\n    return (\n        <C.container>\n            <C.mapContainer>\n                {start ?\n                    <> \n                        <Map difficulty={difficulty} character={character}/>\n                        <C.textContainer>\n                            <C.score>Score: {score}</C.score>\n                            <Select \n                                options={languageOptions} \n                                onChange={selectLanguage}\n                                placeholder='JavaScript'\n                                \n                                />\n                            <C.difficulty>Difficulty: {difficulty}</C.difficulty>\n                        </C.textContainer>\n                    </>\n                    :\n                    <>\n                        {over ? \n                            <C.gameOver>\n                                <h1>{`Score: ${score}`}</h1>\n                                <C.button onClick={() => {window.location.reload()}}>Play Again</C.button>\n                                <C.button onClick={() => {setOver(false); setUploadScore(true)}}>Upload Score</C.button>\n                            </C.gameOver>\n                            :\n                            <>\n                                {uploadScore ? \n                                    <>\n                                    {(score > 0) ?\n                                        <UploadScore score={score}/>\n                                        :\n                                        <C.gameOver>\n                                            <h1>Score more than 0 to upload your score!</h1>\n                                            <C.button onClick={() => {window.location.reload()}}>Play Again</C.button>\n                                        </C.gameOver>\n                                    }\n                                    </>\n                                    :\n                                    <C.startMenu>\n                                        <C.startButton onClick={() => {setStart(true)}}>Start</C.startButton>\n                                    </C.startMenu>\n                                }\n                            </>\n                        } \n                    </> \n                }\n            </C.mapContainer>\n            {start ?\n                <Question addScore={addScore} difficulty={difficulty} language={language} trigger={character.trigger}/>\n                :\n                <>\n                    {(over || uploadScore) ?\n                        <Leaderboard/>\n                        :             \n                        <HowToPlay/>\n                    }\n                </>\n            }\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}