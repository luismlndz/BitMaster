{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { mapSpots } from \"../maps/maps\";\nexport const useCharacter = prop => {\n  _s();\n\n  const [username, setUsername] = useState(prop);\n  const [position, setPosition] = useState({\n    x: mapSpots.length,\n    y: mapSpots.length / 2\n  });\n  const [side, setSide] = useState('down');\n\n  const moveLeft = () => {\n    setPosition(position => ({\n      x: canMove(position.x - 1, position.y) ? position.x - 1 : position.x,\n      y: position.y\n    }));\n    setSide('left');\n  };\n\n  const moveRight = () => {\n    setPosition(position => ({\n      x: canMove(position.x + 1, position.y) ? position.x + 1 : position.x,\n      y: position.y\n    }));\n    setSide('right');\n  };\n\n  const moveUp = () => {\n    setPosition(position => ({\n      x: position.x,\n      y: canMove(position.x, position.y - 1) ? position.y - 1 : position.y\n    }));\n    setSide('up');\n  };\n\n  const moveDown = () => {\n    setPosition(position => ({\n      x: position.x,\n      y: canMove(position.x, position.y + 1) ? position.y + 1 : position.y\n    }));\n  };\n\n  const canMove = (x, y) => {\n    if (mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n      if (mapSpots[y][x] === 1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return {\n    username,\n    x: position.x,\n    y: position.y,\n    side,\n    moveLeft,\n    moveRight,\n    moveUp,\n    moveDown\n  };\n};\n\n_s(useCharacter, \"1/kal/Eb4CzBYjYsD1JTfIdvvbk=\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/hooks/useCharacter.ts"],"names":["useState","mapSpots","useCharacter","prop","username","setUsername","position","setPosition","x","length","y","side","setSide","moveLeft","canMove","moveRight","moveUp","moveDown","undefined"],"mappings":"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","sourcesContent":["import { CharacterSides } from \"../components/Character/CharacterSides\";\nimport { useState } from \"react\"\nimport { mapSpots } from \"../maps/maps\";\n\nexport const useCharacter = (prop: string) => {\n    const [username, setUsername] = useState(prop);\n    const [position, setPosition] = useState({x: mapSpots.length, y: mapSpots.length/2});\n    const [side, setSide] = useState<CharacterSides>('down');\n\n    const moveLeft = () => {\n        setPosition((position) => ({\n            x: canMove(position.x - 1, position.y) ? position.x - 1 : position.x,\n            y: position.y\n        }));\n        setSide('left');\n    }\n\n    const moveRight = () => {\n        setPosition((position) => ({\n            x: canMove(position.x + 1, position.y) ? position.x + 1 : position.x,\n            y: position.y\n        }));\n        setSide('right');\n    }\n\n    const moveUp = () => {\n        setPosition((position) => ({\n            x: position.x,\n            y: canMove(position.x, position.y - 1) ? position.y - 1 : position.y\n        }));\n        setSide('up')\n    }\n\n    const moveDown = () => {\n        setPosition((position) => ({\n            x: position.x,\n            y: canMove(position.x, position.y + 1) ? position.y + 1 : position.y\n        }));\n    }\n\n    const canMove = (x: number, y: number) => {\n        if(mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n            if(mapSpots[y][x] === 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    return {\n        username,\n        x: position.x,\n        y: position.y,\n        side,\n        moveLeft,\n        moveRight,\n        moveUp,\n        moveDown\n    }\n\n}"]},"metadata":{},"sourceType":"module"}