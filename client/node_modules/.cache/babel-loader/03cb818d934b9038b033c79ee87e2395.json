{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './QuestionStyling';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Question = _ref => {\n  _s();\n\n  let {\n    addScore,\n    difficulty,\n    trigger\n  } = _ref;\n  const [question, setQuestion] = useState(null);\n  const [isCorrect, setIsCorrect] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (trigger) {\n      axios.get(`http://localhost:8080/questions/${difficulty}`).then(response => {\n        setQuestion(response.data);\n        setLoading(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [difficulty, trigger]);\n\n  const checkAnswer = option => {\n    console.log(\"clicked\");\n\n    if (option === (question === null || question === void 0 ? void 0 : question.answer)) {\n      setIsCorrect(true);\n      addScore(true);\n    } else {\n      setIsCorrect(false);\n      addScore(false);\n    }\n\n    disableButtons();\n  };\n\n  const handleContinue = () => {\n    //force player to move away from question station\n    window.dispatchEvent(new KeyboardEvent('keydown', {\n      key: \"s\",\n      keyCode: 83,\n      code: \"KeyS\",\n      which: 83\n    }));\n    enableButtons();\n    setIsCorrect(null);\n  };\n\n  const disableButtons = () => {\n    const buttons = document.querySelectorAll('button');\n    buttons.forEach(option => {\n      option.setAttribute('disabled', 'true');\n      option.style.cursor = 'auto';\n      option.style.backgroundColor = 'white';\n      option.style.color = 'black';\n    });\n  };\n\n  const enableButtons = () => {\n    const buttons = document.querySelectorAll('button');\n    buttons.forEach(option => {\n      option.removeAttribute('disabled');\n      option.style.cursor = 'pointer';\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: trigger ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loading ? /*#__PURE__*/_jsxDEV(C.loading, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(C.question, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.block, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.block\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.optionsContainer, {\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(C.option, {\n            onClick: () => {\n              checkAnswer(option);\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), isCorrect === true ? /*#__PURE__*/_jsxDEV(C.nextContainer, {\n          children: [/*#__PURE__*/_jsxDEV(C.correct, {\n            children: \"Correct!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(C.continueButton, {\n            onClick: handleContinue,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this) : isCorrect === false ? /*#__PURE__*/_jsxDEV(C.nextContainer, {\n          children: /*#__PURE__*/_jsxDEV(C.incorrect, {\n            children: \"Incorrect!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this) : '']\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Walk up to a question station\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"XJlkq1MCaHpbjyrREjup7Ln/qC8=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx"],"names":["C","useEffect","useState","axios","Question","addScore","difficulty","trigger","question","setQuestion","isCorrect","setIsCorrect","loading","setLoading","get","then","response","data","catch","err","console","log","checkAnswer","option","answer","disableButtons","handleContinue","window","dispatchEvent","KeyboardEvent","key","keyCode","code","which","enableButtons","buttons","document","querySelectorAll","forEach","setAttribute","style","cursor","backgroundColor","color","removeAttribute","block","options","map","index"],"mappings":"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","sourcesContent":["import * as C from './QuestionStyling';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\ninterface props {\n    addScore(arg: boolean): void;\n    difficulty: string;\n    trigger: boolean;\n}\n\nexport const Question = ({addScore, difficulty, trigger}: props) => {\n    const [question, setQuestion] = useState<null | {id: number, question: string, block: string,options: Array<string>, answer: string}>(null);\n    const [isCorrect, setIsCorrect] = useState<null | boolean>();\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        if(trigger) {\n            axios.get(`http://localhost:8080/questions/${difficulty}`)\n            .then((response) => {\n                setQuestion(response.data);\n                setLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        }\n    }, [difficulty, trigger]);\n\n    const checkAnswer = (option: string) => {\n        console.log(\"clicked\");\n        if(option === question?.answer) {\n            setIsCorrect(true);\n            addScore(true);\n        }\n        else {\n            setIsCorrect(false);\n            addScore(false);\n        }\n        \n        disableButtons();\n    }\n\n    const handleContinue = () => {\n        //force player to move away from question station\n        window.dispatchEvent(new KeyboardEvent('keydown', {\n            key: \"s\",\n            keyCode: 83,\n            code: \"KeyS\",\n            which: 83\n        }));\n\n        enableButtons();\n        setIsCorrect(null);\n    }\n\n    const disableButtons = () => {\n        const buttons = document.querySelectorAll('button');\n        buttons.forEach((option) => {\n            option.setAttribute('disabled', 'true');\n            option.style.cursor = 'auto';\n            option.style.backgroundColor = 'white';\n            option.style.color = 'black';\n        });\n    }\n\n    const enableButtons = () => {\n        const buttons = document.querySelectorAll('button');\n        buttons.forEach((option) => {\n            option.removeAttribute('disabled');\n            option.style.cursor = 'pointer';\n        });\n    }\n\n    return (\n        <C.container>\n            {trigger ?\n                <>\n                {loading ? <C.loading>Loading...</C.loading> : \n                    <>\n                        <C.question>\n                            <h1>{question!.question}</h1>\n                        </C.question>\n                        <C.block>\n                            <p>{question!.block}</p>\n                        </C.block>\n                        <C.optionsContainer>\n                            {question!.options.map((option, index) => (\n                                <C.option key={index} onClick={() => {checkAnswer(option)}}>{option}</C.option>\n                            ))}\n                        </C.optionsContainer>\n                        {isCorrect === true ? \n                            <C.nextContainer>\n                                <C.correct>Correct!</C.correct>\n                                <C.continueButton onClick={handleContinue} >Continue</C.continueButton>\n                            </C.nextContainer> \n                        : ((isCorrect === false) ? \n                            <C.nextContainer>\n                                <C.incorrect>Incorrect!</C.incorrect> \n                            </C.nextContainer>\n                            : '')\n                        }\n                    </>\n                }\n                </>\n                :\n                <>\n                Walk up to a question station\n                </>\n            }\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}