{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './QuestionStyling';\nimport data from '../../data/questions.json';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Question = () => {\n  _s();\n\n  const [question, setQuestion] = useState(data[0]);\n  useEffect(() => {\n    setQuestion(data[0]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: [/*#__PURE__*/_jsxDEV(C.question, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C.block, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"const add = (a,b) => {\", \"return a + b;}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"console.log(add(5,3));\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C.optionsContainer, {\n      children: question.options.map(option => /*#__PURE__*/_jsxDEV(C.option, {\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"Y2/ymSn+Wm3dU2Q/i3FXvAUOSSc=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx"],"names":["C","data","useEffect","useState","Question","question","setQuestion","options","map","option"],"mappings":";;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAACF,IAAI,CAAC,CAAD,CAAL,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW,CAACL,IAAI,CAAC,CAAD,CAAL,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,4BACI,QAAC,CAAD,CAAG,QAAH;AAAA,6BACI;AAAA,kBAAKI,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,CAAD,CAAG,KAAH;AAAA,8BACI;AAAA,mBACK,wBADL,EAEK,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAaI,QAAC,CAAD,CAAG,gBAAH;AAAA,gBACKA,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAsBC,MAAD,iBAClB,QAAC,CAAD,CAAG,MAAH;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA9BM;;GAAML,Q;;KAAAA,Q","sourcesContent":["import * as C from './QuestionStyling';\nimport data from '../../data/questions.json';\nimport { useEffect, useState } from 'react';\n\nexport const Question = () => {\n    const [question, setQuestion] = useState(data[0]);\n\n    useEffect(() => {\n        setQuestion(data[0]);\n    }, []);\n\n    return (\n        <C.container>\n            <C.question>\n                <h1>{question.question}</h1>\n            </C.question>\n            <C.block>\n                <p>\n                    {\"const add = (a,b) => {\"}\n                    {\"return a + b;}\"}\n                </p>\n                <p>\n                    {\"console.log(add(5,3));\"}\n                </p>\n            </C.block>\n            <C.optionsContainer>\n                {question.options.map((option) => (\n                    <C.option>\n                        {option}\n                    </C.option>\n                ))}\n            </C.optionsContainer>\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}