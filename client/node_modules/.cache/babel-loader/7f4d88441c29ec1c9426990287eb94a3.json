{"ast":null,"code":"'use strict';\n\nmodule.exports = pascaligo;\npascaligo.displayName = 'pascaligo';\npascaligo.aliases = [];\n\nfunction pascaligo(Prism) {\n  ;\n\n  (function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n    var type = /(?:\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, braces);\n    var pascaligo = Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [{\n        pattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, type), 'i'),\n        lookbehind: true,\n        inside: null // see below\n\n      }, {\n        pattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, type), 'i'),\n        inside: null // see below\n\n      }, {\n        pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, type)),\n        lookbehind: true,\n        inside: null // see below\n\n      }],\n      keyword: {\n        pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\w+(?=\\s*\\()/i,\n      number: [// Hexadecimal, octal and binary\n      /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i],\n      operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    };\n    var classNameInside = ['comment', 'keyword', 'builtin', 'operator', 'punctuation'].reduce(function (accum, key) {\n      accum[key] = pascaligo[key];\n      return accum;\n    }, {});\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside;\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/node_modules/refractor/lang/pascaligo.js"],"names":["module","exports","pascaligo","displayName","aliases","Prism","braces","source","type","replace","languages","comment","string","pattern","greedy","RegExp","lookbehind","inside","keyword","boolean","builtin","function","number","operator","punctuation","classNameInside","reduce","accum","key","forEach","p"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;AACxB;;AAAC,GAAC,UAASA,KAAT,EAAgB;AAChB;AACA,QAAIC,MAAM,GAAG,2CAA2CC,MAAxD;AACA,QAAIC,IAAI,GAAG,gCAAgCD,MAAhC,CAAuCE,OAAvC,CACT,WADS,EAETH,MAFS,CAAX;AAIA,QAAIJ,SAAS,GAAIG,KAAK,CAACK,SAAN,CAAgBR,SAAhB,GAA4B;AAC3CS,MAAAA,OAAO,EAAE,yBADkC;AAE3CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,2CADH;AAENC,QAAAA,MAAM,EAAE;AAFF,OAFmC;AAM3C,oBAAc,CACZ;AACED,QAAAA,OAAO,EAAEE,MAAM,CACb,+BAA+BR,MAA/B,CAAsCE,OAAtC,CAA8C,SAA9C,EAAyDD,IAAzD,CADa,EAEb,GAFa,CADjB;AAKEQ,QAAAA,UAAU,EAAE,IALd;AAMEC,QAAAA,MAAM,EAAE,IANV,CAMe;;AANf,OADY,EASZ;AACEJ,QAAAA,OAAO,EAAEE,MAAM,CACb,oBAAoBR,MAApB,CAA2BE,OAA3B,CAAmC,SAAnC,EAA8CD,IAA9C,CADa,EAEb,GAFa,CADjB;AAKES,QAAAA,MAAM,EAAE,IALV,CAKe;;AALf,OATY,EAgBZ;AACEJ,QAAAA,OAAO,EAAEE,MAAM,CAAC,eAAeR,MAAf,CAAsBE,OAAtB,CAA8B,SAA9B,EAAyCD,IAAzC,CAAD,CADjB;AAEEQ,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,MAAM,EAAE,IAHV,CAGe;;AAHf,OAhBY,CAN6B;AA4B3CC,MAAAA,OAAO,EAAE;AACPL,QAAAA,OAAO,EAAE,kIADF;AAEPG,QAAAA,UAAU,EAAE;AAFL,OA5BkC;AAgC3CG,MAAAA,OAAO,EAAE;AACPN,QAAAA,OAAO,EAAE,6BADF;AAEPG,QAAAA,UAAU,EAAE;AAFL,OAhCkC;AAoC3CI,MAAAA,OAAO,EAAE;AACPP,QAAAA,OAAO,EAAE,2DADF;AAEPG,QAAAA,UAAU,EAAE;AAFL,OApCkC;AAwC3CK,MAAAA,QAAQ,EAAE,eAxCiC;AAyC3CC,MAAAA,MAAM,EAAE,CACN;AACA,kCAFM,EAEwB;AAC9B,gDAHM,CAzCmC;AA8C3CC,MAAAA,QAAQ,EAAE,0EA9CiC;AA+C3CC,MAAAA,WAAW,EAAE;AA/C8B,KAA7C;AAiDA,QAAIC,eAAe,GAAG,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,UAJoB,EAKpB,aALoB,EAMpBC,MANoB,CAMb,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC5BD,MAAAA,KAAK,CAACC,GAAD,CAAL,GAAa1B,SAAS,CAAC0B,GAAD,CAAtB;AACA,aAAOD,KAAP;AACD,KATqB,EASnB,EATmB,CAAtB;AAUAzB,IAAAA,SAAS,CAAC,YAAD,CAAT,CAAwB2B,OAAxB,CAAgC,UAASC,CAAT,EAAY;AAC1CA,MAAAA,CAAC,CAACb,MAAF,GAAWQ,eAAX;AACD,KAFD;AAGD,GArEA,EAqEEpB,KArEF;AAsEF","sourcesContent":["'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function(Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      braces\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, type),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, type),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, type)),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\w+(?=\\s*\\()/i,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function(accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function(p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}