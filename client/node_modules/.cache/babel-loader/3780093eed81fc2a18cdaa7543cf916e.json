{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { mapSpots } from \"../maps/maps\";\nexport const moveCharacter = prop => {\n  _s();\n\n  const [username, setUsername] = useState(prop);\n  const [position, setPosition] = useState({\n    x: mapSpots.length,\n    y: mapSpots.length / 2\n  }); //const [side, setSide] = useState<CharacterSides>('down');\n\n  const moveLeft = () => {\n    setPosition(position => ({\n      x: canMove(position.x - 1, position.y) ? position.x - 1 : position.x,\n      y: position.y\n    }));\n  };\n\n  const moveRight = () => {\n    setPosition(position => ({\n      x: canMove(position.x + 1, position.y) ? position.x + 1 : position.x,\n      y: position.y\n    }));\n  };\n\n  const moveUp = () => {\n    setPosition(position => ({\n      x: position.x,\n      y: canMove(position.x, position.y + 1) ? position.y + 1 : position.y\n    }));\n  };\n\n  const moveDown = () => {\n    setPosition(position => ({\n      x: position.x,\n      y: canMove(position.x, position.y - 1) ? position.y - 1 : position.y\n    }));\n  };\n\n  const canMove = (x, y) => {\n    if (mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n      if (mapSpots[y][x] === 1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n};\n\n_s(moveCharacter, \"Py0qxF4npjSqSpvOvvisNYWNj9Q=\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/hooks/useCharacter.ts"],"names":["useState","mapSpots","moveCharacter","prop","username","setUsername","position","setPosition","x","length","y","moveLeft","canMove","moveRight","moveUp","moveDown","undefined"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAkB;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACG,IAAD,CAAxC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AAACQ,IAAAA,CAAC,EAAEP,QAAQ,CAACQ,MAAb;AAAqBC,IAAAA,CAAC,EAAET,QAAQ,CAACQ,MAAT,GAAgB;AAAxC,GAAD,CAAxC,CAF2C,CAG3C;;AAEA,QAAME,QAAQ,GAAG,MAAM;AACnBJ,IAAAA,WAAW,CAAED,QAAD,KAAe;AACvBE,MAAAA,CAAC,EAAEI,OAAO,CAACN,QAAQ,CAACE,CAAT,GAAa,CAAd,EAAiBF,QAAQ,CAACI,CAA1B,CAAP,GAAsCJ,QAAQ,CAACE,CAAT,GAAa,CAAnD,GAAuDF,QAAQ,CAACE,CAD5C;AAEvBE,MAAAA,CAAC,EAAEJ,QAAQ,CAACI;AAFW,KAAf,CAAD,CAAX;AAIH,GALD;;AAOA,QAAMG,SAAS,GAAG,MAAM;AACpBN,IAAAA,WAAW,CAAED,QAAD,KAAe;AACvBE,MAAAA,CAAC,EAAEI,OAAO,CAACN,QAAQ,CAACE,CAAT,GAAa,CAAd,EAAiBF,QAAQ,CAACI,CAA1B,CAAP,GAAsCJ,QAAQ,CAACE,CAAT,GAAa,CAAnD,GAAuDF,QAAQ,CAACE,CAD5C;AAEvBE,MAAAA,CAAC,EAAEJ,QAAQ,CAACI;AAFW,KAAf,CAAD,CAAX;AAIH,GALD;;AAOA,QAAMI,MAAM,GAAG,MAAM;AACjBP,IAAAA,WAAW,CAAED,QAAD,KAAe;AACvBE,MAAAA,CAAC,EAAEF,QAAQ,CAACE,CADW;AAEvBE,MAAAA,CAAC,EAAEE,OAAO,CAACN,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACI,CAAT,GAAa,CAA1B,CAAP,GAAsCJ,QAAQ,CAACI,CAAT,GAAa,CAAnD,GAAuDJ,QAAQ,CAACI;AAF5C,KAAf,CAAD,CAAX;AAIH,GALD;;AAOA,QAAMK,QAAQ,GAAG,MAAM;AACnBR,IAAAA,WAAW,CAAED,QAAD,KAAe;AACvBE,MAAAA,CAAC,EAAEF,QAAQ,CAACE,CADW;AAEvBE,MAAAA,CAAC,EAAEE,OAAO,CAACN,QAAQ,CAACE,CAAV,EAAaF,QAAQ,CAACI,CAAT,GAAa,CAA1B,CAAP,GAAsCJ,QAAQ,CAACI,CAAT,GAAa,CAAnD,GAAuDJ,QAAQ,CAACI;AAF5C,KAAf,CAAD,CAAX;AAIH,GALD;;AAOA,QAAME,OAAO,GAAG,CAACJ,CAAD,EAAYE,CAAZ,KAA0B;AACtC,QAAGT,QAAQ,CAACS,CAAD,CAAR,KAAgBM,SAAhB,IAA6Bf,QAAQ,CAACS,CAAD,CAAR,CAAYF,CAAZ,MAAmBQ,SAAnD,EAA8D;AAC1D,UAAGf,QAAQ,CAACS,CAAD,CAAR,CAAYF,CAAZ,MAAmB,CAAtB,EAAyB;AACrB,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GAPD;AASH,CA1CM;;GAAMN,a","sourcesContent":["import { useState } from \"react\"\nimport { mapSpots } from \"../maps/maps\";\n\nexport const moveCharacter = (prop: string) => {\n    const [username, setUsername] = useState(prop);\n    const [position, setPosition] = useState({x: mapSpots.length, y: mapSpots.length/2});\n    //const [side, setSide] = useState<CharacterSides>('down');\n\n    const moveLeft = () => {\n        setPosition((position) => ({\n            x: canMove(position.x - 1, position.y) ? position.x - 1 : position.x,\n            y: position.y\n        }));\n    }\n\n    const moveRight = () => {\n        setPosition((position) => ({\n            x: canMove(position.x + 1, position.y) ? position.x + 1 : position.x,\n            y: position.y\n        }));\n    }\n\n    const moveUp = () => {\n        setPosition((position) => ({\n            x: position.x,\n            y: canMove(position.x, position.y + 1) ? position.y + 1 : position.y\n        }));\n    }\n\n    const moveDown = () => {\n        setPosition((position) => ({\n            x: position.x,\n            y: canMove(position.x, position.y - 1) ? position.y - 1 : position.y\n        }));\n    }\n\n    const canMove = (x: number, y: number) => {\n        if(mapSpots[y] !== undefined && mapSpots[y][x] !== undefined) {\n            if(mapSpots[y][x] === 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}