{"ast":null,"code":"var _jsxFileName = \"/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx\",\n    _s = $RefreshSig$();\n\nimport * as C from './QuestionStyling';\nimport data from '../../data/questions.json';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Question = _ref => {\n  _s();\n\n  let {\n    addScore,\n    difficulty\n  } = _ref;\n  const [question, setQuestion] = useState(null);\n  const [isCorrect, setIsCorrect] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setQuestion(data[0]);\n    setLoading(false);\n  }, []);\n\n  const checkAnswer = option => {\n    if (option === (question === null || question === void 0 ? void 0 : question.answer)) {\n      setIsCorrect(true);\n      addScore(true);\n    } else setIsCorrect(false);\n\n    disableButtons();\n  };\n\n  const disableButtons = () => {\n    const buttons = document.querySelectorAll('button');\n    buttons.forEach(option => {\n      option.setAttribute('disabled', 'true');\n      option.style.cursor = 'auto';\n      option.style.backgroundColor = 'white';\n      option.style.color = 'black';\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.container, {\n    children: loading ? /*#__PURE__*/_jsxDEV(C.loading, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(C.question, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.block, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.block\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.optionsContainer, {\n        children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(C.option, {\n          onClick: () => {\n            checkAnswer(option);\n          },\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), isCorrect ? /*#__PURE__*/_jsxDEV(C.correct, {\n        children: \"Correct!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this) : isCorrect === false ? /*#__PURE__*/_jsxDEV(C.incorrect, {\n        children: \"Incorrect!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 93\n      }, this) : '']\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"XJlkq1MCaHpbjyrREjup7Ln/qC8=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/luismelendez/Desktop/capstone/capstone/client/src/components/Question/Question.tsx"],"names":["C","data","useEffect","useState","Question","addScore","difficulty","question","setQuestion","isCorrect","setIsCorrect","loading","setLoading","checkAnswer","option","answer","disableButtons","buttons","document","querySelectorAll","forEach","setAttribute","style","cursor","backgroundColor","color","block","options","map","index"],"mappings":";;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAOA,OAAO,MAAMC,QAAQ,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAkC;AACvD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAA8F,IAA9F,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW,CAACP,IAAI,CAAC,CAAD,CAAL,CAAX;AACAW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,WAAW,GAAIC,MAAD,IAAoB;AACpC,QAAGA,MAAM,MAAKP,QAAL,aAAKA,QAAL,uBAAKA,QAAQ,CAAEQ,MAAf,CAAT,EAAgC;AAC5BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAHD,MAKIK,YAAY,CAAC,KAAD,CAAZ;;AAEJM,IAAAA,cAAc;AACjB,GATD;;AAWA,QAAMA,cAAc,GAAG,MAAM;AACzB,UAAMC,OAAO,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAhB;AACAF,IAAAA,OAAO,CAACG,OAAR,CAAiBN,MAAD,IAAY;AACxBA,MAAAA,MAAM,CAACO,YAAP,CAAoB,UAApB,EAAgC,MAAhC;AACAP,MAAAA,MAAM,CAACQ,KAAP,CAAaC,MAAb,GAAsB,MAAtB;AACAT,MAAAA,MAAM,CAACQ,KAAP,CAAaE,eAAb,GAA+B,OAA/B;AACAV,MAAAA,MAAM,CAACQ,KAAP,CAAaG,KAAb,GAAqB,OAArB;AACH,KALD;AAMH,GARD;;AAUA,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,cACKd,OAAO,gBAAG,QAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACJ;AAAA,8BACI,QAAC,CAAD,CAAG,QAAH;AAAA,+BACI;AAAA,oBAAKJ,QAAQ,CAAEA;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,CAAD,CAAG,KAAH;AAAA,+BACI;AAAA,oBAAIA,QAAQ,CAAEmB;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,CAAD,CAAG,gBAAH;AAAA,kBACKnB,QAAQ,CAAEoB,OAAV,CAAkBC,GAAlB,CAAsB,CAACd,MAAD,EAASe,KAAT,kBACnB,QAAC,CAAD,CAAG,MAAH;AAAsB,UAAA,OAAO,EAAE,MAAM;AAAChB,YAAAA,WAAW,CAACC,MAAD,CAAX;AAAoB,WAA1D;AAAA,oBAA8DA;AAA9D,WAAee,KAAf;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ,EAYKpB,SAAS,gBAAG,QAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAAuCA,SAAS,KAAK,KAAf,gBAAwB,QAAC,CAAD,CAAG,SAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAgE,EAZpH;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAnDM;;GAAML,Q;;KAAAA,Q","sourcesContent":["import * as C from './QuestionStyling';\nimport data from '../../data/questions.json';\nimport { useEffect, useState } from 'react';\n\ninterface props {\n    addScore(arg: Boolean): void;\n    difficulty: string;\n}\n\nexport const Question = ({addScore, difficulty}: props) => {\n    const [question, setQuestion] = useState<null | {id: number, question: string, block: string,options: Array<string>, answer: string}>(null);\n    const [isCorrect, setIsCorrect] = useState<Boolean>();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setQuestion(data[0]);\n        setLoading(false);\n    }, []);\n\n    const checkAnswer = (option: string) => {\n        if(option === question?.answer) {\n            setIsCorrect(true);\n            addScore(true);\n        }\n        else\n            setIsCorrect(false);\n        \n        disableButtons();\n    }\n\n    const disableButtons = () => {\n        const buttons = document.querySelectorAll('button');\n        buttons.forEach((option) => {\n            option.setAttribute('disabled', 'true');\n            option.style.cursor = 'auto';\n            option.style.backgroundColor = 'white';\n            option.style.color = 'black';\n        })\n    }\n\n    return (\n        <C.container>\n            {loading ? <C.loading>Loading...</C.loading> : \n                <>\n                    <C.question>\n                        <h1>{question!.question}</h1>\n                    </C.question>\n                    <C.block>\n                        <p>{question!.block}</p>\n                    </C.block>\n                    <C.optionsContainer>\n                        {question!.options.map((option, index) => (\n                            <C.option key={index} onClick={() => {checkAnswer(option)}} >{option}</C.option>\n                        ))}\n                    </C.optionsContainer>\n                    {isCorrect ? <C.correct>Correct!</C.correct> : ((isCorrect === false) ? <C.incorrect>Incorrect!</C.incorrect> : '')}\n                </>\n            }\n        </C.container>\n    );\n}"]},"metadata":{},"sourceType":"module"}